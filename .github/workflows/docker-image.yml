name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: db
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v4

    # Build de l'image Docker
    - name: Build Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

    # Créer un .env minimal dans le workspace pour Symfony
    - name: Create minimal .env
      run: |
        echo "APP_ENV=test" > .env
        echo "APP_DEBUG=1" >> .env
        echo "DATABASE_URL=pgsql://postgres:postgres@127.0.0.1:5432/db" >> .env
        echo "MESSENGER_TRANSPORT_DSN=doctrine://default?auto_setup=0" >> .env
        echo "MAILER_DSN=null://null" >> .env

    # Installer les dépendances PHP via composer
    - name: Install dependencies
      run: composer install --no-ansi --no-interaction --no-scripts --no-progress

    # Préparer la base de données
    - name: Prepare DB
      run: |
        php bin/console doctrine:migrations:migrate --no-interaction --env=test
        php bin/console doctrine:fixtures:load --no-interaction --env=test

    # Lancer les tests PHPUnit
    - name: Run PHPUnit
      run: vendor/bin/phpunit --testdox
      env:
        APP_ENV: test
        DATABASE_URL: "pgsql://postgres:postgres@127.0.0.1:5432/db"
